openapi: 3.0.3
info:
  title: Online Shop Backend API
  version: 1.0.0
  description: Comprehensive API specification for Online Shop backend services

# User Service APIs
paths:
  /users/register:
    post:
      summary: User Registration
      tags:
        - User Service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        '201':
          description: User successfully registered
        '409':
          description: User already exists

  /users/login:
    post:
      summary: User Login
      tags:
        - User Service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        '401':
          description: Invalid credentials

  /users/profile:
    get:
      summary: Get User Profile
      tags:
        - User Service
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
                  firstName:
                    type: string
                  lastName:
                    type: string
                  roles:
                    type: array
                    items:
                      type: string

    put:
      summary: Update User Profile
      tags:
        - User Service
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string

  # Product Service APIs
  /products:
    get:
      summary: List Products
      tags:
        - Product Service
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        price:
                          type: number
                        category:
                          type: string
                  total:
                    type: integer

    post:
      summary: Add Product
      tags:
        - Product Service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category:
                  type: string
                price:
                  type: number
                description:
                  type: string
                variants:
                  type: array
                  items:
                    type: object
                    properties:
                      size:
                        type: string
                      color:
                        type: string
                      stock:
                        type: integer
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  category:
                    type: string
                  price:
                    type: number
                  description:
                    type: string
                  variants:
                    type: array
                    items:
                      type: object
                      properties:
                        size:
                          type: string
                        color:
                          type: string
                        stock:
                          type: integer

  /products/{productId}:
    get:
      summary: Get Product Details
      tags:
        - Product Service
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: number
                  category:
                    type: string
                  variants:
                    type: array
                    items:
                      type: object
                      properties:
                        size:
                          type: string
                        color:
                          type: string
                        stock:
                          type: integer

  # Order Service APIs
  /cart:
    get:
      summary: Get Cart Contents
      tags:
        - Order Service
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Cart contents
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: string
                        quantity:
                          type: integer
                        price:
                          type: number
                  total:
                    type: number

    post:
      summary: Add Item to Cart
      tags:
        - Order Service
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                quantity:
                  type: integer
                  minimum: 1
      responses:
        '200':
          description: Item added to cart

  /orders:
    post:
      summary: Create Order
      tags:
        - Order Service
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shippingAddress:
                  type: object
                  properties:
                    street:
                      type: string
                    city:
                      type: string
                    country:
                      type: string
                    zipCode:
                      type: string
                paymentMethodId:
                  type: string
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: string
                  status:
                    type: string

    get:
      summary: Get User Orders
      tags:
        - Order Service
      security:
        - BearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: List of user orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        date:
                          type: string
                          format: date-time
                        total:
                          type: number
                        status:
                          type: string

  # Payment Service APIs
  /payments:
    post:
      summary: Process Payment
      tags:
        - Payment Service
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                paymentMethod:
                  type: string
                  enum: 
                    - credit_card
                    - paypal
                    - apple_pay
                cardToken:
                  type: string
      responses:
        '200':
          description: Payment processed successfully
        '402':
          description: Payment failed

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
